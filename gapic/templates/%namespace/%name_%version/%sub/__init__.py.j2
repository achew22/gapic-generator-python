{% extends '_base.py.j2' %}

{% block content %}

import sys
import warnings

{% set package_path = api.naming.module_namespace|join('.') + "." + api.naming.versioned_module_name %}
from {{package_path}} import gapic_version as package_version

__version__ = package_version.__version__

{#  Import subpackages. -#}
{% for subpackage, _ in api.subpackages|dictsort %}
from . import {{ subpackage }}
{% endfor %}

{#  Import services for this package. -#}
{% for service in api.services.values()|sort(attribute='name')
        if service.meta.address.subpackage == api.subpackage_view %}
from .services.{{ service.name|snake_case }} import {{ service.client_name }}
{% if 'grpc' in opts.transport %}
from .services.{{ service.name|snake_case }} import {{ service.async_client_name }}
{% endif %}
{% endfor %}

{#  Import messages and enums from each proto.
    It is safe to import all of the messages into the same namespace here,
    because protocol buffers itself enforces selector uniqueness within
    a proto package.
-#}
{% for proto in api.protos.values()|sort(attribute='name')
        if proto.meta.address.subpackage == api.subpackage_view %}
{% for message in proto.messages.values()|sort(attribute='name') %}
from .types.{{ proto.module_name }} import {{ message.name }}
{% endfor %}
{% for enum in proto.enums.values()|sort(attribute='name') %}
from .types.{{ proto.module_name }} import {{ enum.name }}
{% endfor %}
{% endfor %}


class Python37DeprecationWarning(DeprecationWarning):
    """
    Deprecation warning raised when Python 3.7 runtime is detected.
    Python 3.7 support will be dropped after January 1, 2024. See
    https://cloud.google.com/python/docs/python37-sunset/ for more information.
    """
    pass

# Checks if the current runtime is Python 3.7.
if sys.version_info.major == 3 and sys.version_info.minor == 7:
    message = (
        "After January 1, 2024, new releases of this client library will drop support "
        "for Python 3.7. More details about Python 3.7 support for Client Libraries "
        "can be found at https://cloud.google.com/python/docs/python37-sunset/"
    )
    # print only the first occurrence of Python37DeprecationWarning, regardless of location
    warnings.simplefilter('once', Python37DeprecationWarning)
    warnings.warn(message, Python37DeprecationWarning)

{#  Define __all__.
    This requires the full set of imported names, so we iterate over
    them again.
-#}
__all__ = (
    {% filter sort_lines -%}
    {% for subpackage in api.subpackages -%}
    '{{ subpackage }}',
    {% endfor -%}
    {% for service in api.services.values()
            if service.meta.address.subpackage == api.subpackage_view -%}
    '{{ service.client_name }}',
    {% if 'grpc' in opts.transport %}
    '{{ service.async_client_name }}',
    {% endif %}
    {% endfor -%}
    {% for proto in api.protos.values()
            if proto.meta.address.subpackage == api.subpackage_view -%}
    {% for message in proto.messages.values()|sort(attribute='name') -%}
    '{{ message.name }}',
    {% endfor -%}
    {% for enum in proto.enums.values() -%}
    '{{ enum.name }}',
    {% endfor -%}
    {% endfor -%}
    {% endfilter %}
)
{% endblock %}
